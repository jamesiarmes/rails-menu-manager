stages:
  - build
  - test
  - codequality
  - security

build:
  stage: build
  image: ruby:2.5
  script:
    - gem install bundler --no-ri --no-rdoc
    - bundle update
  artifacts:
    paths:
      - Gemfile.lock

.rspec: &rspec
  stage: test
  before_script:
    - ruby -v
    - gem install bundler --no-ri --no-rdoc
    - export BUNDLE_GEMFILE="spec/gemfiles/${RSPEC_GEMFILE}"
    - echo $BUNDLE_GEMFILE
    - bundle install --jobs=$(nproc) --path="../../cache/bundle"
    - bundle list
  script:
    - bundle exec rake spec

rspec-ruby2.4.4-rails4.0:
  <<: *rspec
  image: ruby:2.4.4
  variables:
    RSPEC_GEMFILE: rails40

rspec-ruby2.5.1-rails4.0:
  <<: *rspec
  image: ruby:2.5.1
  variables:
    RSPEC_GEMFILE: rails40

rspec-ruby2.3.7-rails4.1:
  <<: *rspec
  image: ruby:2.3.7
  variables:
    RSPEC_GEMFILE: rails41

rspec-ruby2.4.4-rails4.1:
  <<: *rspec
  image: ruby:2.4.4
  variables:
    RSPEC_GEMFILE: rails41

rspec-ruby2.5.1-rails4.1:
  <<: *rspec
  image: ruby:2.5.1
  variables:
    RSPEC_GEMFILE: rails41

rspec-ruby2.3.7-rails4.2:
  <<: *rspec
  image: ruby:2.3.7
  variables:
    RSPEC_GEMFILE: rails42

rspec-ruby2.4.4-rails4.2:
  <<: *rspec
  image: ruby:2.4.4
  variables:
    RSPEC_GEMFILE: rails42

rspec-ruby2.5.1-rails4.2:
  <<: *rspec
  image: ruby:2.5.1
  variables:
    RSPEC_GEMFILE: rails42

rspec-ruby2.3.7-rails5.0:
  <<: *rspec
  image: ruby:2.3.7
  variables:
    RSPEC_GEMFILE: rails50

rspec-ruby2.4.4-rails5.0:
  <<: *rspec
  image: ruby:2.4.4
  variables:
    RSPEC_GEMFILE: rails50

rspec-ruby2.5.1-rails5.0:
  <<: *rspec
  image: ruby:2.5.1
  variables:
    RSPEC_GEMFILE: rails50

rspec-ruby2.3.7-rails5.1:
  <<: *rspec
  image: ruby:2.3.7
  variables:
    RSPEC_GEMFILE: rails51

rspec-ruby2.4.4-rails5.1:
  <<: *rspec
  image: ruby:2.4.4
  variables:
    RSPEC_GEMFILE: rails51

rspec-ruby2.5.1-rails5.1:
  <<: *rspec
  image: ruby:2.5.1
  variables:
    RSPEC_GEMFILE: rails51

rubocop:
  stage: codequality
  image: ruby:2.5
  script:
    - gem install rubocop --no-ri --no-rdoc
    - rubocop

dependencies:
  stage: security
  dependencies:
    - build
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths:
      - gl-dependency-scanning-report.json
